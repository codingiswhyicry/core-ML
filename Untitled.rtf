{\rtf1\ansi\ansicpg1252\cocoartf1537\cocoasubrtf220
{\fonttbl\f0\fswiss\fcharset0 ArialMT;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;}
\margl1440\margr1440
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs30 \cf2 \expnd0\expndtw0\kerning0
\up0 \nosupersub \ulnone \outl0\strokewidth0 \strokec2 Core ML - Swift \
\
-a machine learning framework \
    a. used in photos app (facial recognition)\
    b. used in keyboard (work suggestion)\
    c. used in Apple Watch \
    \
-many features used in machine learning \
    a. emotional recognition\
    b. image recognition\
    \
-machine learning has two steps\
    1) training (feeding learning algorithm and turning it into a model)\
    2) inference \
    \
ML framework \
    a. domain specific framework\
    b. ML framework\
    c. Accelerate and Metal Performance shaders\
    \
Vision \
    a. object tracking \
    b. facial recognition\
    \
NLP (Natural Language Processing)\
    a. language identification\
    \
Core ML\
    a. Domain agonostic\
    b. supports multiple types of media \
    c. can deal with mixed i/o type \
    \
-Frameworks powered by Accelerate and MPS\
    a. high performance math\
    b. inference for custom ML models \
\
-All API's running on user's device\
    a. User Privacy\
    b. Data Cost\
    c. Server Cost\
    d. always available \
    \
-Real Time Machine Learning \
    a. real time image recognition \
    \
-Core ML\
    a. Overview\
        1) on all Apple Platforms \
        2) allows you to focus on user experience \
        3) Unified inference API \
            -Xcode Integration\
        4) Public model format\
        5) Set of tools (support for popular training libraries)\
        \
    b. Model \
        1) basically a function, with knowledge learned from data\
            - Sentiment Analysis\
            - Handwriting recognition\
            - Style transfer\
            - Predicting text\
            - Music tagging \
            - Scene classification\
            - Translation\
            \
        2) CoreML represents a model in a single document \
            - public format \
            - ready to use \
            - task specific\
            \
        3) CoreML tools in a python package \
            -works with training library, which is converted to a python package and then to a model \
        \
    c. Development \
    \
        1) add model to Xcode\
            - automatically recogized (see inputs and outputs)\
            - generated a UI \
            - model gets compiled and bundled (optimized for run time)\
            \
        2) add to target membership\
            - define flower model \
            - define a prediction \
            - return prediction \
        \
        3) Generated Source\
            - input \
            - output \
            - classifier \
            \
 \
    }